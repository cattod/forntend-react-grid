{"version":3,"file":"index.js","sources":["../src/Grid/Actions.tsx","../src/Grid/Grid.tsx","../src/index.tsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { ICatodActions, ICatodcolumnDefs } from \"./Model\";\r\n\r\ninterface IProps<T> {\r\n    rowData: T,\r\n    colDef: ICatodcolumnDefs<T>\r\n    actionsCatod: ICatodActions<T>[]\r\n}\r\nexport class Actions<T> extends Component<IProps<T>>{\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"action-cattod\">\r\n                {this.props.actionsCatod ? this.props.actionsCatod.map((item: ICatodActions<T>, index: number) => {\r\n                    return (\r\n\r\n                        <button key={index}\r\n                            onClick={() => {\r\n                                if (item.actionFn)\r\n                                    item.actionFn(this.props.rowData)\r\n                            }}\r\n                            type=\"button\" className=\"btn btn-light btn-sm action-padding\"\r\n                        >\r\n\r\n                            <span\r\n                                title={item.title}\r\n                                className={`fas fa-${item.icon}`}\r\n                            >\r\n                            </span>\r\n                            {item.title}\r\n                        </button>\r\n                    )\r\n                }) : null}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { ICatodActions, ICatodcolumnDefs } from \"./Model\"\r\nimport { Actions } from \"./Actions\"\r\nimport \"./grid.scss\"\r\n\r\ninterface IProps<T> {\r\n    columnDef?: Array<ICatodcolumnDefs<T>>\r\n    dataRow?: T[]\r\n    actions?: ICatodActions<T>[]\r\n    message?: string\r\n}\r\n\r\ninterface IState<T> {\r\n    loading: boolean,\r\n    headerDef: Array<ICatodcolumnDefs<T>> | undefined\r\n    message: string,\r\n    textAlign: boolean\r\n}\r\n\r\nexport class Grid<T> extends Component<IProps<T>, IState<T>> {\r\n    _textAlign :boolean = true\r\n    constructor(props: IProps<T>) {\r\n        super(props)\r\n        this.state = { loading: false,\r\n             headerDef: undefined,\r\n              message: \"There is not any data for show in grid\",\r\n              textAlign:true\r\n             }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const element: Element | null = document.querySelector('.grid-body')\r\n        const style: CSSStyleDeclaration | \"\" = element ? getComputedStyle(element) : \"\"\r\n        let _TA = this.state.textAlign\r\n        if (style !== \"\") {\r\n         \r\n          if (style.direction === \"rtl\") {\r\n            _TA = false\r\n          }\r\n        }\r\n        let newHeader: Array<ICatodcolumnDefs<T>> | undefined = undefined\r\n        if (this.props.dataRow && !this.props.columnDef) {\r\n            newHeader = this.createHeader(this.props.dataRow)\r\n           \r\n        } else if (this.props.columnDef) {\r\n            newHeader = this.props.columnDef\r\n            // this.setState({headerDef:this.props.columnDef})\r\n        }\r\n\r\n        if (this.props.actions) {\r\n            newHeader?.push({ title: \"\", key: \"action\", icon: \"\" })\r\n        }\r\n        this.setState({ headerDef: newHeader, textAlign:_TA })\r\n    }\r\n\r\n    createHeader = (newData: T[]): Array<ICatodcolumnDefs<T>> => {\r\n        //    let newData =  this.props.dataRow \r\n\r\n        // let newCol = Object.keys(newData[0])  \r\n        let newCol = Object.keys(newData[0]).map((item) => {\r\n            return {\r\n                title: item[0].toUpperCase() + item.slice(1),\r\n                key: item,\r\n                icon: \"\"\r\n            }\r\n\r\n        })\r\n\r\n        return newCol\r\n\r\n\r\n\r\n    }\r\n\r\n    tableRow<T, K extends keyof T>(rowData: T, colDef: ICatodcolumnDefs<T>, key: K, actions?: ICatodActions<T>[]) {\r\n\r\n\r\n        if (key === \"action\" && actions) {\r\n            return <Actions rowData={rowData} colDef={colDef} actionsCatod={actions} />\r\n        } else {\r\n            if (colDef.displayValue && colDef.valueGetter) {\r\n\r\n\r\n                return rowData[key]\r\n            } else if (colDef.displayValue) {\r\n\r\n                return colDef.displayValue(rowData)\r\n            }\r\n\r\n            else if (colDef.valueGetter) {\r\n                return colDef.valueGetter(rowData)\r\n            } else return rowData[key]\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className={this.state.textAlign?\"grid-body\":\"grid-body-right\"} >\r\n                {this.state.loading ? <div>loading...</div> :\r\n                    <table className=\"table table-bordered table-sm table-hover\">\r\n                        <thead className=\"back-header\">\r\n                            <tr>\r\n                                {this.state.headerDef?.map((item) => {\r\n                                    return (\r\n                                        <th scope=\"col\" key={item.key}>{item.title}</th>\r\n                                    )\r\n                                })}\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.props.dataRow?.map((item: any, index) => {\r\n\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        {this.state.headerDef?.map((element: any, id) => {\r\n                                            return (\r\n                                                <td key={id}>\r\n                                                    {this.tableRow(item, element, element.key, this.props.actions)}\r\n\r\n                                                </td>\r\n\r\n                                            )\r\n                                        })}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </table>}\r\n\r\n                {!this.props.columnDef && !this.props.dataRow ? <p className=\"empty-grid\">{this.props.message ? this.props.message : this.state.message}</p> : null}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}","import * as React from \"react\";\r\nimport {Grid} from \"./Grid/Grid\"\r\nimport {ICatodcolumnDefs , ICatodActions, ICattodGridProps} from \"./Grid/Model\"\r\n\r\n\r\nexport interface Catodcolumn<T> extends ICatodcolumnDefs<T>{}\r\nexport interface CatodActions<T> extends ICatodActions<T>{}\r\n\r\n\r\nexport class CatodGrid<T> extends React.Component<ICattodGridProps<T>> {\r\n  render() {\r\n   \r\n\r\n    return (\r\n<Grid \r\n    columnDef = {this.props.columnDef}\r\n    dataRow = {this.props.dataRow}\r\n    actions = {this.props.actions}\r\n    message = {this.props.message}\r\n    />\r\n    ) ;\r\n  }\r\n}\r\n"],"names":["React","Component","React.createElement","React.Component"],"mappings":"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"}