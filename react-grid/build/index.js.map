{"version":3,"file":"index.js","sources":["../src/Grid/Actions.tsx","../src/Grid/Grid.tsx","../src/index.tsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { ICatodActions, ICatodcolumnDefs } from \"./Model\";\r\n\r\ninterface IProps<T> {\r\n    rowData: T,\r\n    colDef: ICatodcolumnDefs<T>\r\n    actionsCatod: ICatodActions<T>[]\r\n}\r\nexport class Actions<T> extends Component<IProps<T>>{\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"action-cattod\">\r\n                {this.props.actionsCatod ? this.props.actionsCatod.map((item: ICatodActions<T>, index: number) => {\r\n                    return (\r\n\r\n                        <button key={index}\r\n                            onClick={() => {\r\n                                if (item.actionFn)\r\n                                    item.actionFn(this.props.rowData)\r\n                            }}\r\n                            type=\"button\" className=\"btn btn-light btn-sm action-padding\"\r\n                        >\r\n\r\n                            <span\r\n                                title={item.title}\r\n                                className={`fas fa-${item.icon}`}\r\n                            >\r\n                            </span>\r\n                            {item.title}\r\n                        </button>\r\n                    )\r\n                }) : null}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport { ICatodActions, ICatodcolumnDefs ,ISort} from \"./Model\"\r\nimport { Actions } from \"./Actions\"\r\nimport \"./grid.scss\"\r\n\r\ninterface IProps<T> {\r\n    columnDef?: Array<ICatodcolumnDefs<T>>\r\n    dataRow?: T[]\r\n    actions?: ICatodActions<T>[]\r\n    message?: string\r\n}\r\n\r\ninterface IState<T> {\r\n    dataRow?: T[]\r\n    loading: boolean,\r\n    headerDef: Array<ICatodcolumnDefs<T>> | undefined\r\n    message: string,\r\n    textAlign: boolean,\r\n    sortType: ISort\r\n}\r\n\r\n\r\nexport class Grid<T> extends Component<IProps<T>, IState<T>> {\r\n    _textAlign :boolean = true\r\n    constructor(props: IProps<T>) {\r\n        super(props)\r\n        this.state = { loading: false,\r\n             headerDef: undefined,\r\n              message: \"There is not any data for show in grid\",\r\n              textAlign:true,\r\n              sortType:{sortType:\"none\"},\r\n              dataRow:[]\r\n             }\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps: IProps<T>) {\r\n    \r\n    \r\n        if (this.props.dataRow !== prevProps.dataRow) {\r\n        \r\n            this.setState({  dataRow:this.props.dataRow})\r\n    \r\n        }\r\n      }\r\n\r\n    componentDidMount() {\r\n        const element: Element | null = document.querySelector('.grid-body')\r\n        const style: CSSStyleDeclaration | \"\" = element ? getComputedStyle(element) : \"\"\r\n        let _TA = this.state.textAlign\r\n        if (style !== \"\") {\r\n         \r\n          if (style.direction === \"rtl\") {\r\n            _TA = false\r\n          }\r\n        }\r\n        let newHeader: Array<ICatodcolumnDefs<T>> | undefined = undefined\r\n        let newDataRow:T[] = []\r\n        if (this.props.dataRow) {\r\n            newDataRow = this.props.dataRow\r\n        }\r\n        if (this.props.dataRow && !this.props.columnDef) {\r\n            newHeader = this.createHeader(this.props.dataRow)\r\n            \r\n        } else if (this.props.columnDef) {\r\n            newHeader = this.props.columnDef\r\n          \r\n        }\r\n\r\n        if (this.props.actions) {\r\n            newHeader?.push({ title: \"\", key: \"action\", icon: \"\" ,displayValue:()=>{return\"\"}, valueGetter:()=>{return \"\"}})\r\n        }\r\n        this.setState({ headerDef: newHeader, textAlign:_TA , dataRow:newDataRow})\r\n    }\r\n\r\n    createHeader = (newData: T[]): Array<ICatodcolumnDefs<T>> => {\r\n        let newCol = Object.keys(newData[0]).map((item) => {\r\n            return {\r\n                title: item[0].toUpperCase() + item.slice(1),\r\n                key: item,\r\n                icon: \"\",\r\n                displayValue:()=>{return\"\"},\r\n                valueGetter:()=>{return\"\"}\r\n            }\r\n\r\n        })\r\n\r\n        return newCol\r\n\r\n\r\n\r\n    }\r\n\r\n    tableRow(rowData: T, colDef: ICatodcolumnDefs<T>, key: string, actions?: ICatodActions<T>[]) {\r\n\r\n\r\n        if (key === \"action\" && actions) {\r\n            return <Actions rowData={rowData} colDef={colDef} actionsCatod={actions} />\r\n        } else {\r\n            return colDef.displayValue(rowData)\r\n        }\r\n    }\r\n    sortHandle = (sortType:ISort, onSort:((sortType:\"ascending\"|\"descending\"|\"none\")=>T[])|undefined)=>{\r\n      if (onSort) \r\n        this.setState({sortType:sortType, dataRow:onSort(sortType.sortType)})\r\n    }\r\n\r\n    selectSortType = (data:ICatodcolumnDefs<T>)=>{\r\n        if (data.onSort){\r\n            switch(this.state.sortType.sortType){\r\n                case \"ascending\":                 \r\n            return   <div >{ data.title}{this.upSvg(data)}</div>\r\n                case \"descending\": \r\n                    return <div >{ data.title}{this.downSvg(data)}</div>            \r\n                case \"none\":\r\n                    return <div >{ data.title}{this.sortSvg(data)}</div>                \r\n                default: return\r\n            }\r\n          \r\n        }\r\n    \r\nreturn data.title\r\n    }\r\n\r\n\r\n    sortSvg = (data:ICatodcolumnDefs<T>)=>{\r\n        return <svg height=\"15\" width=\"20\" name=\"sort\" onClick={()=>this.sortHandle({sortType:\"ascending\"},data.onSort)}>\r\n        <polyline points=\"8,5 11,0 14,5 11,0 11,15\"\r\n         className=\"sort-svg\" \r\n        />\r\n          <polyline points=\"5,0 5,15 2,10 5,15 8,10\" className=\"sort-svg\" />\r\n          Sorry, your browser does not support inline SVG.\r\n        </svg>\r\n    }\r\n\r\n    upSvg = (data:ICatodcolumnDefs<T>)=>{\r\n        return  <svg height=\"15\" width=\"10\" name=\"up\" onClick={()=>this.sortHandle({sortType:\"descending\"},data.onSort)}>\r\n        <polyline points=\"2,5 5,0 8,5 5,0 5,15\" className=\"sort-svg\" />\r\n        Sorry, your browser does not support inline SVG.\r\n      </svg>\r\n    }\r\n\r\n    downSvg = (data:ICatodcolumnDefs<T>)=>{\r\n        return  <svg height=\"15\" width=\"10\" name=\"up\" onClick={()=>this.sortHandle({sortType:\"none\"},data.onSort)}>\r\n        <polyline points=\"5,0 5,15 2,10 5,15 8,10 \" className=\"sort-svg\" />\r\n        Sorry, your browser does not support inline SVG.\r\n      </svg>\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className={this.state.textAlign?\"grid-body\":\"grid-body-right\"} >\r\n                {this.state.loading ? <div>loading...</div> :\r\n                    <table className=\"table table-bordered table-sm table-hover\">\r\n                        <thead className=\"back-header\">\r\n                            <tr>\r\n                                {this.state.headerDef?.map((item:ICatodcolumnDefs<T>) => {\r\n                                    return (\r\n                                        <th scope=\"col\" key={item.key}>{this.selectSortType(item)}</th>\r\n                                    )\r\n                                })}\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.dataRow?.map((item: T, index:number) => {\r\n\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        {this.state.headerDef?.map((element: ICatodcolumnDefs<T>, id:number) => {\r\n                                            return (\r\n                                                <td key={id}>\r\n                                                    {this.tableRow(item, element, element.key, this.props.actions)}\r\n\r\n                                                </td>\r\n\r\n                                            )\r\n                                        })}\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </table>}\r\n\r\n                {!this.props.columnDef && !this.props.dataRow ? <p className=\"empty-grid\">{this.props.message ? this.props.message : this.state.message}</p> : null}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}","import * as React from \"react\";\r\nimport {Grid} from \"./Grid/Grid\"\r\nimport {ICatodcolumnDefs , ICatodActions, ICattodGridProps} from \"./Grid/Model\"\r\n\r\n\r\nexport interface Catodcolumn<T> extends ICatodcolumnDefs<T>{}\r\nexport interface CatodActions<T> extends ICatodActions<T>{}\r\n\r\n\r\nexport class CatodGrid<T> extends React.Component<ICattodGridProps<T>> {\r\n  render() {\r\n   \r\n\r\n    return (\r\n<Grid \r\n    columnDef = {this.props.columnDef}\r\n    dataRow = {this.props.dataRow}\r\n    actions = {this.props.actions}\r\n    message = {this.props.message}\r\n    />\r\n    ) ;\r\n  }\r\n}\r\n"],"names":["React","Component","React.createElement","React.Component"],"mappings":"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"}